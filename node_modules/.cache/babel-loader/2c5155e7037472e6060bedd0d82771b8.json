{"ast":null,"code":"var _jsxFileName = \"/Users/necvn-448/Documents/GitHub/udemy-frontend/src/components/Route/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport Status from \"../../constants/status-constants\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const loginInform = useSelector(state => state.user.userInform);\n  const isLogin = loginInform.status.status === Status.SUCCESS_STATUS;\n  console.log(loginInform, isLogin);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isLogin ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrivateRoute, \"+KleJ09q1j+BhWteGHC/Uejr8oU=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/necvn-448/Documents/GitHub/udemy-frontend/src/components/Route/PrivateRoute.js"],"names":["useSelector","Status","Route","Redirect","PrivateRoute","component","Component","rest","loginInform","state","user","userInform","isLogin","status","SUCCESS_STATUS","console","log","props","pathname","from","location"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AACA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AAAA;;AACtE,QAAMC,WAAW,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,UAAvB,CAA/B;AACA,QAAMC,OAAO,GAAGJ,WAAW,CAACK,MAAZ,CAAmBA,MAAnB,KAA8BZ,MAAM,CAACa,cAArD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ,EAAyBI,OAAzB;AACA,sBACE,QAAC,KAAD,OACML,IADN;AAEE,IAAA,MAAM,EAAGU,KAAD,IACNL,OAAO,gBACL,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAE,QADR;AAEFT,QAAAA,KAAK,EAAE;AAAEU,UAAAA,IAAI,EAAEF,KAAK,CAACG;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GArBuBhB,Y;UACFJ,W;;;KADEI,Y","sourcesContent":["import { useSelector } from \"react-redux\";\nimport Status from \"../../constants/status-constants\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const loginInform = useSelector((state) => state.user.userInform);\n  const isLogin = loginInform.status.status === Status.SUCCESS_STATUS;\n  console.log(loginInform, isLogin);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}