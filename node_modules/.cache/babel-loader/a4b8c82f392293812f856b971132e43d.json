{"ast":null,"code":"var _jsxFileName = \"/Users/necvn-448/Documents/GitHub/udemy-frontend/src/components/Auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport classes from \"./Register.module.css\";\nimport { verifyEmail, verifyPassword } from \"../../utils/auth/verify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register(props) {\n  _s();\n\n  const [error, setError] = useState({\n    message: \"\"\n  });\n  const [registerInform, setRegisterInform] = useState({\n    email: \"\",\n    password: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    role: 2\n  });\n  const dispatch = useDispatch(); //const authInfor = useSelector();\n\n  const registerHandler = e => {\n    e.preventDefault();\n\n    if (!verifyEmail(registerInform.email)) {\n      setError({\n        message: \"Invalid email\"\n      });\n      return;\n    }\n\n    if (!verifyPassword(registerInform.password)) {\n      setError({\n        message: \"Password phải không có khoảng trắng và hơn 6 ký tự\"\n      });\n      return;\n    }\n\n    if (registerInform.firstname.trim().length === 0 || registerInform.lastname.trim().length === 0) {\n      setError({\n        message: \"Vui lòng điền đẩy đủ thông tin\"\n      });\n      return;\n    }\n  };\n\n  const handleEventChange = event => {\n    setError({\n      message: \"\"\n    });\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setRegisterInform(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  console.log(registerInform);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: classes.title,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleEventChange,\n        name: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleEventChange,\n        name: \"password\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleEventChange,\n        name: \"firstname\",\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleEventChange,\n        name: \"lastname\",\n        placeholder: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.errorText,\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: registerHandler,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"VBVLN3UgTa7MzrdEHXanWw5XZ/4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/necvn-448/Documents/GitHub/udemy-frontend/src/components/Auth/Register.js"],"names":["useState","classes","verifyEmail","verifyPassword","useDispatch","useSelector","Register","props","error","setError","message","registerInform","setRegisterInform","email","password","firstname","lastname","role","dispatch","registerHandler","e","preventDefault","trim","length","handleEventChange","event","target","value","name","prevState","console","log","wrapper","title","errorText"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport classes from \"./Register.module.css\";\nimport { verifyEmail, verifyPassword } from \"../../utils/auth/verify\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Register(props) {\n  const [error, setError] = useState({\n    message: \"\",\n  });\n  const [registerInform, setRegisterInform] = useState({\n    email: \"\",\n    password: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    role: 2,\n  });\n  const dispatch = useDispatch();\n  //const authInfor = useSelector();\n\n  const registerHandler = (e) => {\n    e.preventDefault();\n    if (!verifyEmail(registerInform.email)) {\n      setError({\n        message: \"Invalid email\",\n      });\n      return;\n    }\n    if (!verifyPassword(registerInform.password)) {\n      setError({\n        message: \"Password phải không có khoảng trắng và hơn 6 ký tự\",\n      });\n      return;\n    }\n    if(registerInform.firstname.trim().length===0 || registerInform.lastname.trim().length===0)\n    {\n        setError({\n            message: \"Vui lòng điền đẩy đủ thông tin\",\n          });\n          return;\n    }\n  };\n\n  const handleEventChange = (event) => {\n    setError({\n      message: \"\",\n    });\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    setRegisterInform((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n  console.log(registerInform);\n\n  return (\n    <div className={classes.wrapper}>\n      <h3 className={classes.title}>Register</h3>\n      <form onSubmit={registerHandler}>\n        <input onChange={handleEventChange} name=\"email\" placeholder=\"Email\" />\n        <input\n          onChange={handleEventChange}\n          name=\"password\"\n          placeholder=\"Password\"\n          type=\"password\"\n        />\n        <input\n          onChange={handleEventChange}\n          name=\"firstname\"\n          placeholder=\"First Name\"\n        />\n        <input\n          onChange={handleEventChange}\n          name=\"lastname\"\n          placeholder=\"Last Name\"\n        />\n          <div className={classes.errorText}>{error.message}</div>\n        \n        <button onClick={registerHandler}>Register</button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}