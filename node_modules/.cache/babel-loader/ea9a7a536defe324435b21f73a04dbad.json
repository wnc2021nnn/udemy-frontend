{"ast":null,"code":"var _jsxFileName = \"/Users/necvn-448/Documents/GitHub/udemy-frontend/src/pages/CategoryPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Dropdown from \"react-multilevel-dropdown\";\nimport \"react-dropdown/style.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCategoriesList } from \"../store/slices/categoriesSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryDropdown = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const listCategory = useSelector(state => state.categories.listCategory.entities);\n  console.log(\"List category: \", listCategory);\n  const listCategoryJSX = listCategory.map(category => {\n    const listTopic = category.topics.map(topic => {\n      return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        children: topic.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      onClick: () => {},\n      children: [category.title, /*#__PURE__*/_jsxDEV(Dropdown.Submenu, {\n        position: \"right\",\n        children: listTopic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  });\n  useEffect(() => {\n    dispatch(fetchCategoriesList());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    title: \"Category\",\n    children: listCategoryJSX\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoryDropdown, \"ffg7hWDIyCbA5oahM9HBkaoAMms=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CategoryDropdown;\nexport default CategoryDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryDropdown\");","map":{"version":3,"sources":["/Users/necvn-448/Documents/GitHub/udemy-frontend/src/pages/CategoryPage.js"],"names":["React","useEffect","useState","Dropdown","useDispatch","useSelector","fetchCategoriesList","CategoryDropdown","dispatch","listCategory","state","categories","entities","console","log","listCategoryJSX","map","category","listTopic","topics","topic","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAO,0BAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,iCAApC;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,YAAY,GAAGJ,WAAW,CAC7BK,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBF,YAAjB,CAA8BG,QADX,CAAhC;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,YAA/B;AAEA,QAAMM,eAAe,GAAGN,YAAY,CAACO,GAAb,CAAkBC,QAAD,IAAc;AACrD,UAAMC,SAAS,GAAGD,QAAQ,CAACE,MAAT,CAAgBH,GAAhB,CAAqBI,KAAD,IAAW;AAC/C,0BAAO,QAAC,QAAD,CAAU,IAAV;AAAA,kBAAgBA,KAAK,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFiB,CAAlB;AAGA,wBACE,QAAC,QAAD,CAAU,IAAV;AAAe,MAAA,OAAO,EAAE,MAAM,CAAE,CAAhC;AAAA,iBACGJ,QAAQ,CAACI,KADZ,eAEE,QAAC,QAAD,CAAU,OAAV;AAAkB,QAAA,QAAQ,EAAC,OAA3B;AAAA,kBACGH;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAZuB,CAAxB;AAaAjB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACF,mBAAmB,EAApB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAC,UAAhB;AAAA,cACGS;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BD;;GAAMR,gB;UACaH,W,EACIC,W;;;KAFjBE,gB;AA8BN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Dropdown from \"react-multilevel-dropdown\";\nimport \"react-dropdown/style.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCategoriesList } from \"../store/slices/categoriesSlice\";\n\nconst CategoryDropdown = () => {\n  const dispatch = useDispatch();\n  const listCategory = useSelector(\n    (state) => state.categories.listCategory.entities\n  );\n  console.log(\"List category: \", listCategory);\n\n  const listCategoryJSX = listCategory.map((category) => {\n    const listTopic = category.topics.map((topic) => {\n      return <Dropdown.Item>{topic.title}</Dropdown.Item>\n    });\n    return (\n      <Dropdown.Item onClick={() => {}}>\n        {category.title}\n        <Dropdown.Submenu position=\"right\">\n          {listTopic}\n        </Dropdown.Submenu>\n      </Dropdown.Item>\n    );\n  });\n  useEffect(() => {\n    dispatch(fetchCategoriesList());\n  }, []);\n\n  return (\n    <Dropdown title=\"Category\">\n      {listCategoryJSX}\n    </Dropdown>\n  );\n};\nexport default CategoryDropdown;\n"]},"metadata":{},"sourceType":"module"}